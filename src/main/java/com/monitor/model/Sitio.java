package com.monitor.model;
// Generated 23/06/2017 12:40:03 PM by Hibernate Tools 5.2.3.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EntityManager;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Query;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Sitio generated by hbm2java
 */
@Entity
@Table(name = "SITIO", schema = "MONITOR")
public class Sitio extends Entidad {

	private SitioId id;
	private Plaza plaza;
	private Campana campana;
	private Date inicia;
	private Date termina;
	private Integer status;
	private String ubicacion;
	private Integer iluminacion;
	private Set<Foto> fotos = new HashSet<Foto>(0);

	public Sitio() {
	}

	public Sitio(SitioId id, Plaza plaza, Campana campana) {
		this.id = id;
		this.plaza = plaza;
		this.campana = campana;
	}

	public Sitio(SitioId id, Plaza plaza, Campana campana, Date inicia, Date termina, Integer status, String ubicacion,
			Integer iluminacion, Set<Foto> fotos) {
		this.id = id;
		this.plaza = plaza;
		this.campana = campana;
		this.inicia = inicia;
		this.termina = termina;
		this.status = status;
		this.ubicacion = ubicacion;
		this.iluminacion = iluminacion;
		this.fotos = fotos;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "cveCampana", column = @Column(name = "CVE_CAMPANA", nullable = false, length = 12)),
			@AttributeOverride(name = "cveClipro", column = @Column(name = "CVE_CLIPRO", nullable = false, length = 10)),
			@AttributeOverride(name = "cvePlaza", column = @Column(name = "CVE_PLAZA", nullable = false, length = 10)),
			@AttributeOverride(name = "cveSitio", column = @Column(name = "CVE_SITIO", nullable = false, length = 20)) })
	public SitioId getId() {
		return this.id;
	}

	public void setId(SitioId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CVE_PLAZA", nullable = false, insertable = false, updatable = false)
	public Plaza getPlaza() {
		return this.plaza;
	}

	public void setPlaza(Plaza plaza) {
		this.plaza = plaza;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CVE_CAMPANA", referencedColumnName = "CVE_CAMPANA", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CVE_CLIPRO", referencedColumnName = "CVE_CLIPRO", nullable = false, insertable = false, updatable = false) })
	public Campana getCampana() {
		return this.campana;
	}

	public void setCampana(Campana campana) {
		this.campana = campana;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "INICIA", length = 7)
	public Date getInicia() {
		return this.inicia;
	}

	public void setInicia(Date inicia) {
		this.inicia = inicia;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "TERMINA", length = 7)
	public Date getTermina() {
		return this.termina;
	}

	public void setTermina(Date termina) {
		this.termina = termina;
	}

	@Column(name = "STATUS", precision = 6, scale = 0)
	public Integer getStatus() {
		return this.status;
	}

	public void setStatus(Integer status) {
		this.status = status;
	}

	@Column(name = "UBICACION", length = 200)
	public String getUbicacion() {
		return this.ubicacion;
	}

	public void setUbicacion(String ubicacion) {
		this.ubicacion = ubicacion;
	}

	@Column(name = "ILUMINACION", precision = 6, scale = 0)
	public Integer getIluminacion() {
		return this.iluminacion;
	}

	public void setIluminacion(Integer iluminacion) {
		this.iluminacion = iluminacion;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sitio")
	public Set<Foto> getFotos() {
		return this.fotos;
	}

	public void setFotos(Set<Foto> fotos) {
		this.fotos = fotos;
	}

	@Override
	public Query traerQuery(EntityManager entityManager) {
		// TODO Auto-generated method stub
		Query q = null;

		switch (consulta) {

		case "consultaSitiosActivos":

			q = consultaSitiosActivos(entityManager);

			break;

		case "consultaTodos":

			// q = consultaTodos(entityManager);

			break;

		case "consultaPorId":

			q = consultaPorId(entityManager);

			break;

		default:
			break;
		}

		return q;
	}



	@Override
	public void copiaDatos(Entidad entidad) {
		// TODO Auto-generated method stub

	}

	@Override
	protected Query consultaPorId(EntityManager entityManager) {
		// TODO Auto-generated method stub
		return null;
	}

	public void consultaSitiosActivos() {
		consulta = "consultaSitiosActivos";

	}

	private Query consultaSitiosActivos(EntityManager entityManager) {
		Query q = entityManager.createQuery("SELECT s from Sitio as s where status=1");

		return q;
	}

}
